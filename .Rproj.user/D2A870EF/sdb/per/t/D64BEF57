{
    "collab_server" : "",
    "contents" : "library(\"shiny\")\nsource(\"R/helper.R\")\n\n\npreparePageList <- function(defaulttxt = TRUE, defaultName = \"REI\",\n                            location = \"local\", txtPath = NULL,\n                            randomize = FALSE, globId = defaultName){\n  \n  if (isTRUE(defaulttxt)){\n    \n    dir <- list.files(\"www\", pattern = defaultName)\n    dir <- file.path(\"www\", dir)\n    \n  } else {\n    \n    dir <- txtPath\n    \n  }\n  \n  df <- read.table(dir, header = TRUE, sep = \"\\t\", stringsAsFactors = FALSE)\n  \n  if (any(!is.na(df$choices))){\n    choicesList <- strsplit(as.character(df$choices), split = \",\", fixed = TRUE)\n    \n    choiceNames <- strsplit(as.character(df$choiceNames), split = \",\",\n                            fixed = TRUE)\n\n    choiceNames <- lapply(choiceNames, revArgsGsub, pattern = \"NA\",\n                          replacement = NA)\n  \n    choicesList[!is.na(choicesList)] <- \n      lapply(choicesList[!is.na(choicesList)], as.numeric)\n    \n    for (i in seq_along(df$id)){\n      if (any(is.na(choiceNames[[i]]))){\n        next()\n      } else {\n        names(choicesList[[i]]) <- choiceNames[[i]]\n      }\n    }\n  \n  }\n  \n  df$placeholder[is.na(df$placeholder)] <- \"\"\n  \n  df$inline[df$inline != 1] <- FALSE\n  df$inline[df$inline == 1] <- TRUE\n  \n\n  if(any(!is.na(df$questionIndex))){\n    qInd <- 1:max(df$questionIndex, na.rm = TRUE)\n    nmax <- max(qInd)\n  } else {\n      qInd <- nmax <- NA\n    }\n  \n  textOrQuestionnaireList <- list(\n    \"questionIndex\" = qInd,\n    \"text\" = df$text,\n    \"reverse\" = df$reverse,\n    \"randomize\" = randomize,\n    \"choices\" = choicesList,\n    \"n\" = nmax,\n    \"description\" = df$describtion,\n    \"page\" = df$page,\n    \"nResponseOptions\" = df$nResponseOptions,\n    \"type\" = df$type,\n    \"min\" = df$min,\n    \"max\" = df$max,\n    \"placeholder\" = df$placeholder,\n    \"id\" = paste0(globId, \"_\", df$id),\n    \"globId\" = as.character(globId),\n    \"disabled\" = df$disabled,\n    \"width\" = df$width,\n    \"height\" = df$height,\n    \"inline\" = df$inline\n  )\n  \n  # randomize pages or questions\n  # if(randomize == TRUE) {\n  #   \n  #   textOrQuestionnaireList.order <- sample(1:textOrQuestionnaireList$n,\n  #                                           size = textOrQuestionnaireList$n)\n  #   textOrQuestionnaireList$text <- rei.survey$text[textOrQuestionnaireList]\n  #   \n  # } else {textOrQuestionnaireList.order <- 1:textOrQuestionnaireList$n}\n  \n  textOrQuestionnaireList\n}",
    "created" : 1500646962026.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1544886493",
    "id" : "D64BEF57",
    "lastKnownWriteTime" : 1500646974,
    "last_content_update" : 1500646974565,
    "path" : "C:/Users/Markus/switchdrive/shinyPsych/R/prepare_page_list.R",
    "project_path" : "R/prepare_page_list.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}