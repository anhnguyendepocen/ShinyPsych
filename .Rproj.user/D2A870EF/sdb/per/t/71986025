{
    "collab_server" : "",
    "contents" : "# helper functions\nlibrary(\"shiny\")\n\n# helper for saveData function\nconvertNull <- function(x){\n  if (is.null(x)){\n    val <- NA\n  } else {\n    val <- x\n  }\n  val\n}\n\n# helper for create_page_list\nrevArgsGsub <- function(x, pattern, replacement){\n  # reverse input arguments for use in apply functions\n  gsub(pattern = pattern, replacement = replacement, x = x)\n}\n\n# helper for create_page\ncallTag <- function(index, pageList){\n  # identify tag and call it with the appropriate arguments\n  \n  # define lists of possible inputs\n  tagList <- c(\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"p\", \"emph\", \"i\", \"li\",\n               \"small\", \"strong\")\n  multiList <- c(\"checkboxGroupInput\", \"radioButtons\")\n  textList <- c(\"passwordInput\", \"textInput\")\n  nusliList <- c(\"sliderInput\", \"numericInput\")\n  \n  # check which function is matched to ensure correct use of arguments\n  if (any(tagList == pageList$type[index])){\n    # prints text, such as headers and paragraphs\n    get(pageList$type[index])(pageList$text[index], width = pageList$width[index])\n    \n  } else if (any(multiList == pageList$type[index])){\n    # creates input objects such as radio buttons and multi check boxes.\n      get(pageList$type[index])(inputId = pageList$id[index], choices = pageList$choices[[index]],\n                                label = pageList$text[index], selected = character(0),\n                                width = pageList$width[index], inline = pageList$inline[index])\n    \n  } else if (any(textList == pageList$type[index])){\n    # creates input objects such as password or text input.\n    get(pageList$type[index])(pageList$id[index], label = pageList$text[index],\n                              placeholder = pageList$placeholder[index],\n                              width = pageList$width[index])\n    \n  } else if (any(nusliList == pageList$type[index])){\n    # creates input objects such as numeric input or slider\n    get(pageList$type[index])(pageList$id[index], label = pageList$text[index],\n                              min = pageList$min[index], max = pageList$max[index],\n                              value = pageList$value[index], width = pageList$width[index])\n    \n  } else if (pageList$type[index] == \"img\"){\n    # post an image from a given source\n    get(pageList$type[index])(src = pageList$text[index], width = pageList$width[index],\n                              height = pageList$height)\n    \n  }else if (pageList$type[index] == \"html\"){\n    \n    # this is apropriate if the text is actually written html code\n    tags$html(pageList$text[index])\n    \n  } else if (pageList$type[index] == \"checkboxInput\"){\n    # creates a checkbox that yields FALSE if unchecked and TRUE if checked\n    get(pageList$type[index])(pageList$id[index], label = pageList$text[index],\n                              width = pageList$width[index])\n    \n  } else if (pageList$type[index] == \"selectInput\"){\n    # creates a dropdown list from which an input can be selected\n    get(pageList$type[index])(inputId = pageList$id[index], choices = pageList$choices[[index]],\n                              label = pageList$text[index], selected = character(0),\n                              width = pageList$width[index], multiple = pageList$inline[index])\n    \n  } else {\n    stop(\"Couldn't identify function. See documentation for valid inputs. Note that spelling must match shiny functions!\")\n  }\n}\n",
    "created" : 1500646962323.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1136921546",
    "id" : "71986025",
    "lastKnownWriteTime" : 1500646844,
    "last_content_update" : 1500646844,
    "path" : "C:/Users/Markus/switchdrive/shinyPsych/R/helper.R",
    "project_path" : "R/helper.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}