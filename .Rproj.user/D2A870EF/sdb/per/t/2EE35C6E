{
    "collab_server" : "",
    "contents" : "#' Create a List of Reactive Values for Task Control\n#'\n#' Create a list of reactive values ((see \\code{\\link[shiny]{reactiveValues}} or\n#' \\url{https://shiny.rstudio.com/reference/shiny/latest/reactiveValues.html}))\n#' for task control. Additional variables can be specified.\n#' @param task string. The task name. Has to be a single string since\n#'  for different tasks some variables are the same. If you have several tasks\n#'  in the same app just call this function several times. Valid inputs are\n#'  \"bandit\", \"bart\", \"dfe\", \"dfd\" and \"dd\".\n#' @param oVar string. Vector with the name(s) of additional\n#'  variables that should be added to ctrlList.\n#' @param oVarVals sting or numeric. Vector containing the values that should be\n#'  appended to the oVars variables. Must be the same length as oVars.\n#'\n#' @return A list of reactive values used for task control.\n#' @export\n#'\n#' @examples\n#' GameData <- createTaskCtrlList(task = \"dfd\")\n#' print(shiny::isolate(shiny::reactiveValuesToList(GameData)))\ncreateTaskCtrlList <- function(task, oVar = NULL, oVarVals = NULL){\n\n  if (task == \"bandit\"){\n\n    taskList <- shiny::reactiveValues(trial = c(),\n                                      time = c(),\n                                      selection = c(),\n                                      outcome = c(),\n                                      points.cum = c(),\n                                      game = c())\n\n  } else if (task == \"bart\"){\n\n    taskList <- shiny::reactiveValues(balloon = c(),\n                                      time = c(),\n                                      pumps = c(),\n                                      action = c(),\n                                      pop = c())\n\n  } else if (task == \"dfe\"){\n\n    taskList <- shiny::reactiveValues(trial = c(),\n                                      time = c(),\n                                      samples = c(),\n                                      selected = c(),\n                                      finalOutcome = c(),\n                                      outcome = c(),\n                                      gamble = c(),\n                                      option.order = c(),\n                                      gamble.order = c())\n  } else if (task == \"dfd\"){\n\n    taskList <- shiny::reactiveValues(time = c(),\n                                      selected = c(),\n                                      option.order = c(),\n                                      gamble.order = c())\n  } else if (task == \"dd\"){\n\n    taskList <- shiny::reactiveValues(time = c(),\n                                      selected = c(),\n                                      trial.order = c())\n  }\n\n\n  if (!is.null(oVar)){\n    for (oV in seq_along(oVar)){\n      taskList[[oVar[oV]]] <- oVarVals[oV]\n    }\n  }\n\n  taskList\n\n}\n",
    "created" : 1503486477047.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3208469684",
    "id" : "2EE35C6E",
    "lastKnownWriteTime" : 1503486523,
    "last_content_update" : 1503486523217,
    "path" : "C:/Users/Markus/switchdrive/packages/ShinyPsych/R/create_task_ctrl_list.R",
    "project_path" : "R/create_task_ctrl_list.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}