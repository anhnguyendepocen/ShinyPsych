{
    "collab_server" : "",
    "contents" : "#' Read in Information on What to Display on a Page and Prepare it for Later Use.\n#'\n#' Reads in a document with read.table and prepares the input to be in the form\n#' needed to later call \\code{\\link{createPage}} on it to create and display a\n#' html page containing text and or various input format offered by shiny.\n#'\n#' Input files must have a very specific form described in detail at\n#' \\url{XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX}\n#' and can be read in from a local place or from dropbox. If dropbox is used\n#' you must specify tokens to access it (see \\code{\\link[rdrop2]{drop_read_csv}})\n#' in an rds file.\n#' @param defaulttxt logical. If TRUE (default) a default option is used.\n#' @param location string. The file location. Valid inputs are\n#'  \"local\" or \"dropbox\". Not needed if defaulttxt is TRUE.\n#' @param fileName string. The name of the file to read in. If\n#'  defaulttxt is TRUE this has to be one of the options specified in details.\n#'  Else it has to be the file name inclusive full path in either dropbox or the\n#'  local system.\n#' @param randomize logical. If TRUE (default) the page variable of\n#'  the items that have a 1 in the randomize variable should be randomly ordered.\n#' @param globId string. Vector containing the names of the page or questionnaire\n#'  variables.\n#' @param droptoken string. The name of the file in which the access tokens for\n#'  dropbox are stored. If this file is not in the app directory the full path\n#'  must be specified. Must be an rds file.\n#' @importFrom utils read.table\n#'\n#' @return A list containing many different parameters necessary to later create\n#'  the page with \\code{\\link{createPage}}. See example for details.\n#' @export\n#'\n#' @examples\n#' example.survey <- createPageList(fileName = \"Survey_Example\", randomize = TRUE)\n#' example.survey\n#' rm(example.survey)\ncreatePageList <- function(defaulttxt = TRUE, location = \"local\",\n                           fileName = \"Example\", randomize = TRUE,\n                           globId = fileName, droptoken = \"droptoken.rds\"){\n\n  if (isTRUE(defaulttxt)){\n\n    fil <- system.file(\"extdata\", paste0(fileName, \".txt\"),\n                       package = \"ShinyPsych\")\n\n    df <- read.table(fil, header = TRUE, sep = \"\\t\",\n                     stringsAsFactors = FALSE)\n\n  } else if (location == \"local\"){\n\n    dir <- fileName\n    df <- read.table(dir, header = TRUE, sep = \"\\t\",\n                     stringsAsFactors = FALSE)\n\n  } else if (location == \"dropbox\"){\n    dtoken <- readRDS(droptoken)\n    df <- rdrop2::drop_read_csv(fileName, dtoken = dtoken,\n                                        sep = \"\\t\", stringsAsFactors = FALSE)\n\n  } else {\n    stop(paste(location), \"is no valid location. If defaulttxt is FALSE location must either be \\\"local\\\" or \\\"dropbox\\\".\")\n  }\n\n  choicesList <- df$choices\n\n  if (any(!is.na(df$choices))){\n    choicesList <- strsplit(as.character(df$choices), split = \",\", fixed = TRUE)\n\n    choiceNames <- strsplit(as.character(df$choiceNames), split = \",\",\n                            fixed = TRUE)\n\n    choiceNames <- lapply(choiceNames, .revArgsGsub, pattern = \"NA\",\n                          replacement = NA)\n\n    choicesList[!is.na(choicesList)] <-\n      lapply(choicesList[!is.na(choicesList)], as.numeric)\n\n    for (i in seq_along(df$id)){\n      if (any(is.na(choiceNames[[i]]))){\n        next()\n      } else {\n        names(choicesList[[i]]) <- choiceNames[[i]]\n      }\n    }\n\n  }\n\n  df$placeholder[is.na(df$placeholder)] <- \"\"\n\n  df$inline[df$inline != 1] <- FALSE\n  df$inline[df$inline == 1] <- TRUE\n\n  if (isTRUE(randomize)){\n    df$page[df$randomize == 1] <- sample(df$page[df$randomize == 1])\n\n  }\n\n  id.order <- df$id[order(df$page)]\n  id.order <- paste(id.order[!is.na(id.order)], collapse = \";\")\n\n  textOrQuestionnaireList <- list(\n    \"text\" = df$text,\n    \"reverse\" = df$reverse,\n    \"choices\" = choicesList,\n    \"page\" = df$page,\n    \"type\" = df$type,\n    \"min\" = df$min,\n    \"max\" = df$max,\n    \"placeholder\" = df$placeholder,\n    \"id\" = paste0(globId, \"_\", df$id),\n    \"globId\" = as.character(globId),\n    \"disabled\" = df$disabled,\n    \"width\" = df$width,\n    \"height\" = df$height,\n    \"inline\" = df$inline,\n    \"checkType\" = df$checkType,\n    \"defaultList\" = defaulttxt,\n    \"id.order\" = id.order\n  )\n\n  ind <- substr(textOrQuestionnaireList$id,\n                start = nchar(textOrQuestionnaireList$id) - 1,\n                stop = nchar(textOrQuestionnaireList$id)) != \"NA\"\n\n  textOrQuestionnaireList$obIds <- textOrQuestionnaireList$id[ind]\n\n  textOrQuestionnaireList\n}\n",
    "created" : 1503382267686.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1143550383",
    "id" : "652BAF29",
    "lastKnownWriteTime" : 1503997832,
    "last_content_update" : 1503997832987,
    "path" : "C:/Users/Markus/switchdrive/ShinyPsych/R/create_page_list.R",
    "project_path" : "R/create_page_list.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}